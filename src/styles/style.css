@layer reset, defaults, components, utilities, overrides;

/* Resets and frameworks */
@import url("./vendor/_gardevoir.css") layer(reset.gardevoir);

/* Typefaces and typography */
@import url("./typography/chivo.css");
@import url("./typography/murecho.css");

:root {
	/* #fff */
	--white: oklch(100 0 0);
	--white-a70: color-mix(in lab, var(--white), transparent 30%);

	/* #000 */
	--black: oklch(0 0 0);
	--black-a30: color-mix(in lab, var(--black), transparent 30%);

	/* #f00 */
	--red: oklch(62.8 0.28 29.23);
	--red-a40: color-mix(in lab, var(--red), transparent 60%);
	--red-a70: color-mix(in lab, var(--red), transparent 30%);

	/* #0ff */
	--cyan: oklch(90.54 0.16 194.77);
	--cyan-a40: color-mix(in lab, var(--cyan), transparent 60%);
	--cyan-a70: color-mix(in lab, var(--cyan), transparent 30%);

	/* #50649b */
	--san-marino: oklch(51.18 0.091 267.94);
	--san-marino-a20: color-mix(in lab, var(--san-marino), transparent 80%);

	/* #7326d1 */
	--blueviolet: oklch(48.82 0.235 296.67);

	/* #ff80ce */
	--magenta: oklch(76.69 0.33 344.35);
	--magenta-a70: color-mix(in lab, var(--magenta), transparent 30%);
}

@layer utilities {
	.flow {
		--flow-space: 1rem;
	}

	.flow > * + * {
		margin-block-start: var(--flow-space);
	}
}

@layer defaults {
	*,
	*::before,
	*::after {
		box-sizing: border-box;
	}

	:root {
		/*
			I want so badly to use the round() function here.
			https://caniuse.com/mdn-css_types_round
			
			It can be done with this too, which is almost supported widely.
			https://caniuse.com/mdn-css_at-rules_property
			
			It won't work with Lightning CSS because that only works with
			things that don't use variables.
		*/
		--font-weight: 150;

		/* --font-weight-fallback: round(var(--font-weight), 100); */
		--font-weight-fallback: 200;

		font-family: Chivo, Murecho, system-ui, sans-serif;
		font-weight: var(--font-weight-fallback);
		font-variation-settings: "wght" var(--font-weight);

		--font-size: 1rem;
		--text-transform: none;
		--opacity: 1;
		--line-height: 1.15;
		--letter-spacing: 0;
		--selection-color: var(--blueviolet);
	}

	::selection {
		background-color: var(--selection-color);
	}

	:is(h1, h2, h3, h4, h5, h6) {
		--font-weight: 200;
		--font-weight-fallback: 200;
		--text-transform: uppercase;
		--line-height: 1.2;
		--letter-spacing: 0.03rem;
	}

	h1 {
		--font-size: clamp(1.25rem, 1.25rem + 2vi, 2rem);
	}

	:is(h2, h3) {
		--font-size: clamp(0.7rem, 0.7rem + 1vi, 0.85rem);
	}

	:is(a, p, span, h1, h2, h3, h4, h5, h6, hr) {
		font-size: var(--font-size);
		text-align: var(--text-align-dir);
		text-transform: var(--text-transform);
		opacity: var(--opacity);
		line-height: var(--line-height);
		letter-spacing: var(--letter-spacing);
		font-weight: var(--font-weight-fallback);
		font-variation-settings: "wght" var(--font-weight);
	}

	nav {
		z-index: 1;
	}
}

@layer components {
	img.background-image {
		position: fixed;
		top: 0;
		left: 0;
		object-fit: cover;
		height: 100%;
		width: 100%;
	}

	.navbar {
		background: linear-gradient(to right, #0000002a, #0000002a),
			var(--san-marino-a20);
		color: white;
		height: fit-content;
		width: 100%;
	}

	.navbar ul {
		display: flex;
	}

	.navbar ul li {
		list-style: none;
	}

	.navbar ul li a {
		--font-size: clamp(1rem, 1rem + 1.5vi, 1.5rem);

		display: inline-block;
		padding-block: 0.5rem;
		padding-inline: 1rem;
		color: white;
	}
}
